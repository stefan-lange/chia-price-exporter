image: golang:1.18

.go-cache:
    variables:
        GOPATH: $CI_PROJECT_DIR/.go
    before_script:
        - mkdir -p .go
    cache:
        key: $CI_PROJECT_ID
        # read-only cache as default
        policy: pull
        paths:
            - .go/pkg/mod/

stages:
    - prepare
    - test
    - build
    - release

cache_deps:
    extends: .go-cache
    stage: prepare
    script:
        - make dep
    cache:
        # make cache writeable for this job
        policy: pull-push

unit_tests:
    extends: .go-cache
    stage: test
    script:
        - make test

race_detector:
    extends: .go-cache
    stage: test
    script:
        - make race

.memory_sanitizer:
    extends: .go-cache
    stage: test
    script:
        - make msan

.code_coverage:
    extends: .go-cache
    stage: test
    script:
        - make coverage

.code_coverage_report:
    extends: .go-cache
    stage: test
    script:
        - make coverhtml
    only:
        - main

lint_code:
    extends: .go-cache
    stage: test
    script:
        - make lint

build:
    extends: .go-cache
    stage: build
    script:
        - make

extract-version-changes:
    stage: prepare
    rules:
        -   if: $CI_COMMIT_TAG
            when: on_success
    script:
        - /bin/bash ./.ci/extractVersionChanges.sh "$CI_COMMIT_TAG" ./CHANGELOG.md ./CHANGELOG-CHANGES.md
    artifacts:
        paths:
            - CHANGELOG-CHANGES.md

release:
    # the release job creates a gitlab release
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    dependencies:
        - extract-version-changes
    # We recommend the use of `rules` to prevent these pipelines
    # from running. See the notes section below for details.
    rules:
        -   if: $CI_COMMIT_TAG
            when: on_success
    script:
        - echo "running release job for $TAG"
    release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
        tag_name: '$CI_COMMIT_TAG'  # use the git tag as gitlab release name
        description: './CHANGELOG-CHANGES.md'
        ref: '$CI_COMMIT_SHA'                          # The tag is created from the pipeline SHA.
